const db = require("quick.db") // Puxando a nossa DataBase. *Instale utilizando: npm i quick.db --save
const Discord = require("discord.js") // Puxando a livraria Discord.js

exports.run = async (client, message, args) => {
  
  var emprego = await db.get(`trabaio_${message.author.id}`) // Puxando o 'trabaio', que iremos utilizar para definir na DB o trabalho dos usu√°rios
  if (emprego === 1) return message.reply(`voc√™ j√° tem um emprego! üíª Programador`) // Caso o usu√°rio tenha 1 (um) registrado na DB, ele ser√° reconhecido como Programador
  if (emprego === 2) return message.reply(`voc√™ j√° tem um emprego!  :pick: minerador`) // Ou, caso o usu√°rio, tenha 2 (dois) registrado na DB, ele ser√° reconhecido como Designer

  let embed = new Discord.MessageEmbed() // Criando uma embed
  .setDescription(`Escolha o seu emprego, clicando no emoji correspondente.\n\nüíª = Programador\n:pick:  = Minerador`)
  .setColor('#03fc7b')
  
  message.channel.send(embed).then(msg => { // definindo a fun√ß√£o 'then' como 'msg'

    msg.react('üíª').then(() => msg.react(':pick:')) // reagindo com dois emojis, referentes √† cada emprego

    const filter = (reaction, user) => { // Criando um filtro para quem clicou no emoji
      return ['üíª', ':pick:'].includes(reaction.emoji.name) && user.id === message.author.id; // caso o ID do usu√°rio que clicou, seja igual ao do que puxou, iremos fazer a a√ß√£o
    };
    msg.awaitReactions(filter, { max: 1, time: 60000, errors: ['time']}) // retornnando com as rea√ß√µes
      .then(collected => { // mais uma fun√ß√£o 'then', definida como 'collected'
        const reaction = collected.first();
    
        if (reaction.emoji.name === 'üíª') { // Caso o usu√°rio clique no emoji referente √† Programador
          message.reply('parab√©ns! Voc√™ ingressou como um üíª Programador'); 
          db.add(`trabaio_${message.author.id}`, 1) // iremos adicionar 1 (um) na DB, que iremos usar como Programador
        } 
    
       if (reaction.emoji.name === 'üñåÔ∏è') { // Agora, caso o usu√°rio clique no outro emoji, referente √† Designer
         message.reply('parab√©ns! Voc√™ se tornou um üñåÔ∏è Designer')
         db.add(`trabaio_${message.author.id}`, 2) // iremos adicionar 2 (dois) na DB, que iremos definir como Designer
       }
      
      })
      .catch(collected => { // Lembra da 'then' collected? Pois √©! Caso o usu√°rio n√£o clique em 30s, iremos declarar como cancelado
        message.reply('o tempo para escolher excedeu! Tente novamente.');
      });
    })
  }

exports.help = {
  name: 'emprego',
  aliases: ['trabalho']
}
